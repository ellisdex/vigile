=== function alter(ref x, k) ===
~ x = x + k

=== function came_from(-> x) ===
	~ return TURNS_SINCE(x) == 0

=== function print_num(x) ===
{ 
    - x >= 1000:
        {print_num(x / 1000)} thousand { x mod 1000 > 0:{print_num(x mod 1000)}}
    - x >= 100:
        {print_num(x / 100)} hundred { x mod 100 > 0:and {print_num(x mod 100)}}
    - x == 0:
        zero
    - else:
        { x >= 20:
            { x / 10:
                - 2: twenty
                - 3: thirty
                - 4: forty
                - 5: fifty
                - 6: sixty
                - 7: seventy
                - 8: eighty
                - 9: ninety
            }
            { x mod 10 > 0:<>-<>}
        }
        { x < 10 || x > 20:
            { x mod 10:
                - 1: one
                - 2: two
                - 3: three
                - 4: four        
                - 5: five
                - 6: six
                - 7: seven
                - 8: eight
                - 9: nine
            }
        - else:     
            { x:
                - 10: ten
                - 11: eleven       
                - 12: twelve
                - 13: thirteen
                - 14: fourteen
                - 15: fifteen
                - 16: sixteen      
                - 17: seventeen
                - 18: eighteen
                - 19: nineteen
            }
        }
}


//=== function print_day(x)===
//{ 
//    - x >= 1000:
//        {print_day(x / 1000)} thousand { x mod 1000 > 0:{print_day(x mod 1000)}}
//    - x >= 100:
//        {print_day(x / 100)} hundred { x mod 100 > 0:and {print_day(x mod 100)}}
//x == 20:
//        twentieth
//    - x == 30:
//        thirtieth
//    - x == 0:
//        zero
//    - else:
//        { x >= 20:
//            { x / 10:
//                - 2: twenty
//                - 3: thirty
//                - 4: forty
//                - 5: fifty
//                - 6: sixty
//                - 7: seventy
 ///               - 8: eighty
//                - 9: ninety
 //           }
 //           { x mod 10 > 0:<>-<>}
//        }
 //       { x < 10 || x > 20:
 //           { x mod 10:
 //               - 1: first
 //               - 2: second
//                - 3: third
////                - 4: fourth
//                - 5: fifth
//                - 6: sixth
 //               - 7: seventh
 //               - 8: eighth
 //               - 9: ninth
 //           }
 //       - else:     
 //           { x:
 //               - 10: tenth
 //               - 11: eleventh
//                - 12: twelfth
 //               - 13: thirteenth
 //               - 14: fourteenth
//                - 15: fifteenth
//                - 16: sixteenth   
 //               - 17: seventeenth
//                - 18: eighteenth
 //               - 19: nineteenth
//            }
//        }
//}

=== function print_day(x)===
{
    - x == 1:
        first
    - x == 2:
        second
    - x == 3:
        third
    - x == 4:
        fourth
    - x == 5:
        fifth
    - x == 6:
        sixth
    - x == 7:
        seventh
    - x == 8:
        eigth
    - x == 9:
        ninth
    - x == 10:
        tenth
    - x == 11:
        eleventh
    - x == 12:
        twelfth
    - x == 13:
        thirteenth
    - x == 14:
        fourteenth
    - x == 15:
        fifteenth
    - x == 16:
        sixteenth
    - x == 17:
        seventeenth
    - x == 18:
        eighteenth
    - x == 19:
        nineteenth
    - x == 20:
        twentieth
    - x == 21:
        twenty-first
    - x == 22:
        twenty-second
    - x == 23:
        twenty-third
    - x == 24:
        twenty-fourth
    - x == 25:
        twenty-fifth
    - x == 26:
        twenty-sixth
    - x == 27:
        twenty-seventh
    - x == 28:
        twenty-eigth
    - x == 29:
        twenty-ninth
    - x == 30:
        thirtieth
    - x == 31:
        thirty first
}

===function print_month(x)===
{
    - x == 1: 
        Ianuarius
    - x == 2:
        Februarius
    - x == 3: 
        Martius
    - x == 4:
        Aprilis
    - else:
        placeholder_month
}

===function cap_pronoun(x)===
{
  
  -x == PRONOUN1:
    {
        - PRONOUN1 == "they":
            They
        - PRONOUN1 == "she":
            She
        - PRONOUN1 == "he":
            He
        }

  -x == PRONOUN2:
    {
        - PRONOUN2 == "them":
            Them
        - PRONOUN2 == "her":
            Her
        - PRONOUN2 == "him":
            Him
        }

  -x == PRONOUN3:
    {
        - PRONOUN3 == "their":
            Their
        - PRONOUN3 == "her":
            Her
        - PRONOUN3 == "his":
            His
        }

  -x == PRONOUN4:
    {
        - PRONOUN4 == "theirs":
            Theirs
        - PRONOUN2 == "hers":
            Hers
        - PRONOUN2 == "his":
            His
        }

  -x == PRONOUN5:
    {
        - PRONOUN5 == "themself":
            Themself
        - PRONOUN2 == "herself":
            Herself
        - PRONOUN2 == "himself":
            Himself
        }

    }

===function print_location(x)===
{
    - x == "NR":
        Noviomagus Reginorum
    - x == "villa":
        Fishbourne Palace
    - x == "MD":
        Mai Dunn
    - x == "forest":
        the forest by Mai Dunn
    - x == "Bath":
        Bath
    - x == "tavern":
        Bath Tavern
    - x == "temple":
        the Temple of Sulis Minerva
    - x == "Crann":
        {CRANNNAME}
    - x == "village":
        Cranborne village
}

/// ===function 30sec===
/// ~ alter (CURRENT_SEC, 1)

/// ===function advancetime(minutes)===
/// { CURRENT_MIN == 60:
///    ~ advancetime(hours) 
///    }
    

///
//===function advancesec(seconds)===
//{ seconds > 0.0:
//    ~ alter(SECOND, seconds)
//    ~ seconds = 0
//{
//    -SECOND >= 60:
//        ~ temp y = FLOOR(SECOND / 60)
//        ~ alter(MINUTE, y)
//        ~ SECOND = SECOND mod 60
//}
//}

///
//===function advancemin(minutes)===
//{ minutes > 0.0:
//    ~ alter(MINUTE, minutes)
//    ~ minutes = 0
//{
//    -MINUTE >= 60:
//        ~ temp y = FLOOR(MINUTE / 60)
//        ~ alter(HOUR, y)
//        ~ MINUTE = MINUTE mod 60
//}
//}

///
//===function advancehour(hours)===
//{ hours > 0.0:
//    ~ alter(HOUR, hours)
//    ~ hours = 0
//{
//    -HOUR >= 24:
//        ~ temp y = FLOOR(HOUR / 24)
//        ~ alter(DAY, y)
//        ~ HOUR = HOUR mod 24
//}
//}

///
/// ===function advanceday(days)===
//{ days > 0.0:
//    ~ alter(DAY, days)
//    ~ days = 0
//{
//    - MONTH == 1 && DAY >= 32:
//        ~ temp y = FLOOR(DAY / 32)
//        ~ alter(MONTH, y)
//        ~ DAY = (DAY mod 31)
//    - MONTH == 2 && DAY >= 30:
//        ~ y = FLOOR(DAY / 30)
//        ~ alter(MONTH, 1)
//        ~ DAY = (DAY mod 29)
//    - MONTH == 3 && DAY >= 32:
//        ~ y = FLOOR(DAY / 32)
//        ~ alter(MONTH, 1)
//        ~ DAY = (DAY mod 31)
//}
//}


===function advancetime(seconds, minutes, hours, days)===
~temp y = 0
{ seconds > 0.0:
    ~ alter(SECOND, seconds)
    ~ seconds = 0
{
    -SECOND >= 60 || SECOND < 100:
        ~ y = FLOOR(SECOND / 60)
        ~ alter(MINUTE, y)
        ~ SECOND = SECOND mod 60
    -SECOND >= 100 || SECOND < 1000:
        ~ y = FLOOR(SECOND / 60)
        ~ alter(MINUTE, y)
        ~ SECOND = SECOND mod 60
}
}

{ minutes > 0.0:
    ~ alter(MINUTE, minutes)
    ~ minutes = 0
{
    -MINUTE >= 60:
        ~ y = FLOOR(MINUTE / 60)
        ~ alter(HOUR, y)
        ~ MINUTE = MINUTE mod 60
}
}

{ hours > 0.0:
    ~ alter(HOUR, hours)
    ~ hours = 0
{
    -HOUR >= 24:
        ~ y = FLOOR(HOUR / 24)
        ~ alter(DAY, y)
        ~ HOUR = HOUR mod 24
}
}

{ days > 0.0:
    ~ alter(DAY, days)
    ~ days = 0
{
    - MONTH == 1 && DAY >= 32:
        ~ y = FLOOR(DAY / 32)
        ~ alter(MONTH, y)
        ~ DAY = DAY mod 31
    - MONTH == 2 && DAY >= 30:
        ~ y = FLOOR(DAY / 30)
        ~ alter(MONTH, 1)
        ~ DAY = DAY mod 29
    - MONTH == 3 && DAY >= 32:
        ~ y = FLOOR(DAY / 32)
        ~ alter(MONTH, 1)
        ~ DAY = DAY mod 31
}
}



===function 30secs===
{advancetime(30,0,0,0)}

===function whatday===
the {print_day(DAY)} of {print_month(MONTH)}

===function whattimeDEBUG===
It is {HOUR}:{MINUTE}:{SECOND} on {whatday()}.

===function whattime(x)===
{
    - MINUTE <=9:
        {x} {HOUR}:0{MINUTE} on {whatday()}.
    - else:
        {x} {HOUR}:{MINUTE} on {whatday()}.
}

===function currlocation(place)===
~ playerlocation = place

===function travel_time(destination)===
// options for destination:
// NR (Noviomagus Reginorum), villa (Fishbourne Palace), MD (Mai Dunn), forest (Mai Dunn forest), Crann (Crann Locháinín), Bath, tavern (bath tavern), temple (Temple of Sulis Minerva)

{
  
  -horserent == true || hashorse == true:
    {
    //Noviomagus Reginorum
        - playerlocation == "NR" && destination == "MD":
            ~ TRAVELTIME = INT(NR_MD*0.5)
            ~ traveltimeunit = "hours"
        - playerlocation == "NR" && destination == "Bath":
            ~ TRAVELTIME = INT(NR_BATH*0.5)
            ~ traveltimeunit = "hours" 
        - playerlocation == "NR" && destination == "Bath":
            ~ TRAVELTIME = INT(NR_BATH*0.5)
            ~ traveltimeunit = "hours"
        - playerlocation == "NR" && destination == "villa":
            ~ TRAVELTIME = INT(NR_VILLA*0.5)
            ~ traveltimeunit = "minutes"
        - playerlocation == "NR" && destination == "Crann":
            ~ TRAVELTIME = INT(NR_CRANN*0.5)
            ~ traveltimeunit = "hours"
        - playerlocation == "NR" && destination == "village":
            ~ TRAVELTIME = INT(NR_VILLAGE*0.5)
            ~ traveltimeunit = "hours"
    //Mai Dunn
        - playerlocation == "MD" && destination == "NR":
            ~ TRAVELTIME = INT(NR_MD*0.5)
            ~ traveltimeunit = "hours"
        - playerlocation == "MD" && destination == "Bath":
            ~ TRAVELTIME = INT(BATH_MD*0.5)
            ~ traveltimeunit = "hours" 
        - playerlocation == "MD" && destination == "village":
            ~ TRAVELTIME = INT(MD_VILLAGE*0.5)
            ~ traveltimeunit = "hours"
        - playerlocation == "MD" && destination == "forest":
            ~ TRAVELTIME = INT(MD_FOREST*0.5)
            ~ traveltimeunit = "minutes"
        - playerlocation == "MD" && destination == "Crann":
            ~ TRAVELTIME = INT(MD_CRANN*0.5)
            ~ traveltimeunit = "hours"
    //Bath
        - playerlocation == "Bath" && destination == "NR":
            ~ TRAVELTIME = INT(NR_BATH*0.5)
            ~ traveltimeunit = "hours"
        - playerlocation == "Bath" && destination == "MD":
            ~ TRAVELTIME = INT(BATH_MD*0.5)
            ~ traveltimeunit = "hours"
        - playerlocation == "Bath" && destination == "Crann":
            ~ TRAVELTIME = INT(BATH_CRANN*0.5)
            ~ traveltimeunit = "hours"
        - playerlocation == "Bath" && destination == "village":
            ~ TRAVELTIME = INT(BATH_VILLAGE*0.5)
            ~ traveltimeunit = "hours"
        - playerlocation == "Bath" && destination == "tavern":
            ~ TRAVELTIME = INT(BATH_TAVERN*0.5)
            ~ traveltimeunit = "minutes"
        - playerlocation == "tavern" && destination == "Bath":
            ~ TRAVELTIME = INT(BATH_TAVERN*0.5)
            ~ traveltimeunit = "minutes"
        - playerlocation == "Bath" && destination == "temple":
            ~ TRAVELTIME = INT(BATH_TEMPLE*0.5)
            ~ traveltimeunit = "minutes"

    }

   -hasshoes == true:
    {
    //Noviomagus Reginorum
        - playerlocation == "NR" && destination == "MD":
            ~ TRAVELTIME = INT(NR_MD*0.9)
            ~ traveltimeunit = "hours"
        - playerlocation == "NR" && destination == "Bath":
            ~ TRAVELTIME = INT(NR_BATH*0.9)
            ~ traveltimeunit = "hours"
        - playerlocation == "Bath" && destination == "Crann":
            ~ TRAVELTIME = INT(NR_CRANN*0.9)
            ~ traveltimeunit = "hours"
        - playerlocation == "NR" && destination == "village":
            ~ TRAVELTIME = INT(NR_VILLAGE*0.9)
            ~ traveltimeunit = "hours"
        - playerlocation == "NR" && destination == "villa":
            ~ TRAVELTIME = INT(NR_VILLA*0.9)
             ~ traveltimeunit = "minutes"
    //Mai Dunn
        - playerlocation == "MD" && destination == "NR":
            ~ TRAVELTIME = INT(NR_MD*0.9)
            ~ traveltimeunit = "hours"
        - playerlocation == "MD" && destination == "Bath":
            ~ TRAVELTIME = INT(BATH_MD*0.9)
            ~ traveltimeunit = "hours"
        - playerlocation == "MD" && destination == "forest":
            ~ TRAVELTIME = INT(MD_FOREST*0.9)
            ~ traveltimeunit = "minutes"
        - playerlocation == "MD" && destination == "Crann":
            ~ TRAVELTIME = INT(MD_CRANN*0.9)
            ~ traveltimeunit = "hours"
        - playerlocation == "MD" && destination == "village":
            ~ TRAVELTIME = INT(MD_VILLAGE*0.9)
            ~ traveltimeunit = "hours"
    //Bath
        - playerlocation == "Bath" && destination == "NR":
            ~ TRAVELTIME = INT(NR_BATH*0.9)
            ~ traveltimeunit = "hours"
        - playerlocation == "Bath" && destination == "MD":
            ~ TRAVELTIME = INT(BATH_MD*0.9)
            ~ traveltimeunit = "hours"
        - playerlocation == "Bath" && destination == "Crann":
            ~ TRAVELTIME = INT(BATH_CRANN*0.9)
            ~ traveltimeunit = "hours"
        - playerlocation == "Bath" && destination == "village":
            ~ TRAVELTIME = INT(BATH_VILLAGE*0.9)
            ~ traveltimeunit = "hours"
        - playerlocation == "Bath" && destination == "tavern":
            ~ TRAVELTIME = INT(BATH_TAVERN*0.9)
            ~ traveltimeunit = "minutes"
        - playerlocation == "tavern" && destination == "Bath":
            ~ TRAVELTIME = INT(BATH_TAVERN*0.9)
            ~ traveltimeunit = "minutes"
        - playerlocation == "Bath" && destination == "temple":
            ~ TRAVELTIME = INT(BATH_TEMPLE*0.9)
            ~ traveltimeunit = "minutes"

    }
    
  -else:
    {
    //Noviomagus Reginorum
        - playerlocation == "NR" && destination == "MD":
            ~ TRAVELTIME = NR_MD
            ~ traveltimeunit = "hours"
        - playerlocation == "NR" && destination == "Bath":
            ~ TRAVELTIME = NR_BATH
            ~ traveltimeunit = "hours"
        - playerlocation == "NR" && destination == "Crann":
            ~ TRAVELTIME = NR_CRANN
            ~ traveltimeunit = "hours"
        - playerlocation == "NR" && destination == "village":
            ~ TRAVELTIME = NR_VILLAGE
            ~ traveltimeunit = "hours"
        - playerlocation == "NR" && destination == "villa":
            ~ TRAVELTIME = NR_VILLA
            ~ traveltimeunit = "minutes"
    //Mai Dunn
        - playerlocation == "MD" && destination == "forest":
            ~ TRAVELTIME = MD_FOREST
            ~ traveltimeunit = "minutes"
        - playerlocation == "MD" && destination == "NR":
            ~ TRAVELTIME = NR_MD
            ~ traveltimeunit = "hours"
        - playerlocation == "MD" && destination == "Bath":
            ~ TRAVELTIME = BATH_MD
            ~ traveltimeunit = "hours"
        - playerlocation == "MD" && destination == "Crann":
            ~ TRAVELTIME = MD_CRANN
            ~ traveltimeunit = "hours"
        - playerlocation == "MD" && destination == "village":
            ~ TRAVELTIME = MD_VILLAGE
            ~ traveltimeunit = "hours"
    //Bath
        - playerlocation == "Bath" && destination == "NR":
            ~ TRAVELTIME = NR_BATH
            ~ traveltimeunit = "hours"
        - playerlocation == "Bath" && destination == "MD":
            ~ TRAVELTIME = BATH_MD
            ~ traveltimeunit = "hours"
        - playerlocation == "Bath" && destination == "Crann":
            ~ TRAVELTIME = BATH_CRANN
            ~ traveltimeunit = "hours"
        - playerlocation == "Bath" && destination == "village":
            ~ TRAVELTIME = BATH_VILLAGE
            ~ traveltimeunit = "hours"
        - playerlocation == "Bath" && destination == "tavern":
            ~ TRAVELTIME = BATH_TAVERN
            ~ traveltimeunit = "minutes"
        - playerlocation == "tavern" && destination == "Bath":
            ~ TRAVELTIME = BATH_TAVERN
            ~ traveltimeunit = "minutes"
        - playerlocation == "Bath" && destination == "temple":
            ~ TRAVELTIME = BATH_TEMPLE
            ~ traveltimeunit = "minutes"

    }

}

===function INV_CHECK===
You have:
{hasmoney == 0: No denarii}
{hasmoney == 1: 1 denarius}
{hasmoney >= 2: {hasmoney} denarii}
{hassupplies == 0: No supplies}
{hassupplies == 1: 1 pack of supplies}
{hassupplies >= 2: {hassupplies} supplies}
{hasherbs == 1: 1 pack of sleeping herbs}
{hasherbs >= 2: {hasherbs} packs of sleeping herbs}
{hascake == 1: 1 cake}
{hascake >= 2: {hascake} cakes}
{hasshoes == true: A nice pair of shoes}
{horserent == true: A rented riding horse}
{hashorse == true: Your own riding horse}

===function travel_check(destination)===
Travelling from {print_location(playerlocation)} to {print_location(playerdestination)} will take you {travel_time(playerdestination)}{TRAVELTIME} {traveltimeunit}. {horserent == true: You have rented a horse for this journey.} Continue?

===function wakeytime(x)===
{
    - x == "yes":
        ~ HOUR = 4
        ~ MINUTE = 0
        ~ SECOND = 0
    - x == "no":
        ~ HOUR = 6
        ~ MINUTE = 0
        ~ SECOND = 0
}
        

/// ===function sleepchecktravel===
/// You feel yourself getting tired while on the road. 

===function arrivaltime(x)===
You arrive at {print_location(x)} at {whattime("")}

===function opinoncheck(x)===
{
    - x == "legion":
    {
        - LEGIONOP == LEGIONOP.poor:
            ~pricemod = 1.2
        - LEGIONOP == LEGIONOP.negative:
            ~pricemod = 1.1
        - LEGIONOP == LEGIONOP.neutral:
            ~pricemod = 1
        - LEGIONOP == LEGIONOP.positive:
            ~pricemod = 0.9
        - LEGIONOP == LEGIONOP.great:
            ~pricemod = 0.8
        }
    - x == "locals":
    {
        - LOCALSOP == LOCALSOP.poor:
            ~pricemod = 1.2
        - LOCALSOP == LOCALSOP.negative:
            ~pricemod = 1.1
        - LOCALSOP == LOCALSOP.neutral:
            ~pricemod = 1
        - LOCALSOP == LOCALSOP.positive:
            ~pricemod = 0.9
        - LOCALSOP == LOCALSOP.great:
            ~pricemod = 0.8
        }
    - x == "Heliwr":
    {
        - HELIWROP == HELIWROP.poor:
            ~pricemod = 1.2
        - HELIWROP == HELIWROP.negative:
            ~pricemod = 1.1
        - HELIWROP == HELIWROP.neutral:
            ~pricemod = 1
        - HELIWROP == HELIWROP.positive:
            ~pricemod = 0.9
        - HELIWROP == HELIWROP.great:
            ~pricemod = 0.8
        }
}
